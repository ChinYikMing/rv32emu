name: CI

on: [push, pull_request]

jobs:
  host-arm64:
    runs-on: ubuntu-24.04
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - name: build artifact
      # The GitHub Action for non-x86 CPU
      # https://github.com/uraimo/run-on-arch-action
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu22.04
        # No 'sudo' is available
        install: |
          apt-get update -q -y
          apt-get install -q -y git build-essential libsdl2-dev libsdl2-mixer-dev lsb-release wget software-properties-common gnupg
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global --add safe.directory ${{ github.workspace }}/src/softfloat
          git config --global --add safe.directory ${{ github.workspace }}/src/mini-gdbstub
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          ./llvm.sh 18
        # Append custom commands here
        run: |
          make -j$(nproc)
          make check -j$(nproc)
          make ENABLE_JIT=1 clean && make ENABLE_JIT=1 check -j$(nproc)
          make ENABLE_JIT=1 clean && make ENABLE_EXT_A=0 ENABLE_JIT=1 check -j$(nproc)
          make ENABLE_JIT=1 clean && make ENABLE_EXT_F=0 ENABLE_JIT=1 check -j$(nproc)
          make ENABLE_JIT=1 clean && make ENABLE_EXT_C=0 ENABLE_JIT=1 check -j$(nproc)

  coding-style:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: coding convention
      run: |
            sudo apt-get install -q -y clang-format-18
            .ci/check-newline.sh
            .ci/check-format.sh
      shell: bash

  static-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    # LLVM static analysis
    - name: set up scan-build
      run: |
            sudo apt-get update -q -y
            sudo apt-get install -q -y clang clang-tools libsdl2-dev libsdl2-mixer-dev
            wget https://apt.llvm.org/llvm.sh
            chmod +x ./llvm.sh
            sudo ./llvm.sh 18
      shell: bash
    - name: run scan-build without JIT
      run: make distclean && scan-build -v -o ~/scan-build --status-bugs --use-cc=clang --force-analyze-debug-code --show-description -analyzer-config stable-report-filename=true -enable-checker valist,nullability make ENABLE_EXT_F=0 ENABLE_SDL=0 ENABLE_JIT=0
    - name: run scan-build with JIT
      run: |
          make ENABLE_JIT=1 distclean && scan-build -v -o ~/scan-build --status-bugs --use-cc=clang --force-analyze-debug-code --show-description -analyzer-config stable-report-filename=true -enable-checker valist,nullability make ENABLE_EXT_F=0 ENABLE_SDL=0 ENABLE_JIT=1
